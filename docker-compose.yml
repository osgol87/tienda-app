services:
  eureka-server:
    build: ./DiscoveryService
    container_name: eureka-server-container
    ports:
      - "8761:8761"
    environment:
      # Deshabilita el registro de sí mismo en un entorno de servidor único
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: 'false'
      EUREKA_CLIENT_FETCH_REGISTRY: 'false'
    networks:
      - microservice-net

  gateway-service:
    build: ./GatewayService
    container_name: gateway-service-container
    ports:
      - "8762:8762"
    environment:
      # Eureka se encuentra usando su nombre de servicio en la red compartida
      EUREKA_URL: http://eureka-server:8761/eureka/
    networks:
      - microservice-net
    depends_on:
      - eureka-server
  
  postgres-db:
    image: docker.io/postgres:17-alpine3.22 # O la versión que prefieras
    container_name: postgres-container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgresql
      POSTGRES_DB: postgres # Es buena práctica ser explícito
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - microservice-net

#  product-service:
#    build: ./ProductService
#    container_name: product-service-container
#    ports:
#      - "8081:8081"
#    environment:
#      EUREKA_URL: http://eureka-server:8761/eureka/
#      PRODUCTSERVICE_DB_URL: jdbc:postgresql://postgres-db:5432/postgres
#      PRODUCTSERVICE_DB_USER: postgres
#      PRODUCTSERVICE_DB_PASS: postgresql
#      PRODUCTSERVICE_DDL_AUTO: create
#    networks:
#      - microservice-net
#    depends_on:
#      - eureka-server
#      - postgres-db

  product-service:
    build: ./ProductServiceElastic
    container_name: product-service-container
    ports:
      - "8081:8081"
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      ELASTICSEARCH_HOST: ogonzalezl-6089145741.us-east-1.bonsaisearch.net:443
      ELASTICSEARCH_USER: orhmb20dea
      ELASTICSEARCH_PASS: 91418fl69v
    networks:
      - microservice-net
    depends_on:
      - eureka-server

  order-service:
    build: ./OrderService
    container_name: order-service-container
    ports:
      - "8082:8082"
    environment:
      EUREKA_URL: http://eureka-server:8761/eureka/
      ORDERSERVICE_DB_URL: jdbc:postgresql://postgres-db:5432/postgres
      ORDERSERVICE_DB_USER: postgres
      ORDERSERVICE_DB_PASS: postgresql
      ORDERSERVICE_DDL_AUTO: create
    networks:
      - microservice-net
    depends_on:
      - eureka-server
      - postgres-db

networks:
  microservice-net:
    driver: bridge

volumes:
  postgres-data:
    driver: local
